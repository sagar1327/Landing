<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="rvizconfig" default="$(find first_robot)/rviz/multi.rviz"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <group ns="robot1">
    <arg name="model" default="$(find first_robot)/xacro/first_robot/first_robot.xacro"/>
    <param name="tf_prefix" value="robot1"/>
    <param name="robot_description" command="$(find xacro)/xacro $(arg model)"/>
    <param name="use_gui" value="true"/>
    <rosparam command="load" file="$(find first_robot)/config/control.yaml"/>
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
          args="-urdf -model robot1 -param /robot1/robot_description" respawn="false" output="screen"/>
    <node pkg="robot_state_publisher" type="robot_state_publisher"  name="state_publisher">
      <param name="publish_frequency" type="double" value="30.0" />
    </node>
    <node name="controll_manager" pkg="controller_manager" type="spawner" required="true" output="screen" respawn="false" args="/robot1/joint_state_controller /robot1/wheel_controller /robot1/head_controller"/>
  </group>
  
  <group ns="robot2">
    <arg name="model" default="$(find first_robot)/xacro/second_robot/second_robot.xacro"/>
    <param name="tf_prefix" value="robot2"/>
    <param name="robot_description" command="$(find xacro)/xacro $(arg model)"/>
    <param name="use_gui" value="true"/>
    <rosparam command="load" file="$(find first_robot)/config/control.yaml"/>
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
          args="-urdf -model robot2 -param /robot2/robot_description -x -1.5 -y 2.0 -z 0.0 -R 0.0 -P 0.0 -Y -1.57" respawn="false" output="screen" />
    <node pkg="robot_state_publisher" type="robot_state_publisher"  name="state_publisher">
      <param name="publish_frequency" type="double" value="30.0" />
    </node>
    <node name="controll_manager" pkg="controller_manager" type="spawner" required="true" output="screen" respawn="false" args="/robot2/joint_state_controller /robot2/wheel_controller /robot2/head_controller"/>
  </group>
 
  <node name="robot_steering" pkg="rqt_robot_steering" type="rqt_robot_steering">
      <param name="default_topic" value="/robot1/wheel_controller/cmd_vel"/>
  </node>

  <node name="static_publisher1" pkg="tf" type="static_transform_publisher" args="-1.5 2 0 0 0 -0.7071068 0.7071068 world robot2/base_link2 100"/>
  <node name="static_publisher2" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 1 world robot1/base_link1 100"/>
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" respawn="false" output="screen"/>
  <node name="r1tf_broadcaser" pkg="first_robot" type="tf_broadcaster" output="screen" args="robot1"/>
  <node name="r2tf_broadcaser" pkg="first_robot" type="tf_broadcaster" output="screen" args="robot2"/>
  <node name="listener" pkg="first_robot" type="tf_listener" output="screen"/>

</launch>
